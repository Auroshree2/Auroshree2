{"name": "test_tc1[Admin-admin]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h6[@class='oxd-text oxd-text--h6 oxd-topbar-header-breadcrumb-module']\"}\n  (Session info: MicrosoftEdge=122.0.2365.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF68D85B7F2+63538]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF68D7DF672+238306]\n\t(No symbol) [0x00007FF68D613407]\n\t(No symbol) [0x00007FF68D6597ED]\n\t(No symbol) [0x00007FF68D6598B0]\n\t(No symbol) [0x00007FF68D694387]\n\t(No symbol) [0x00007FF68D678E5F]\n\t(No symbol) [0x00007FF68D64F037]\n\t(No symbol) [0x00007FF68D691F49]\n\t(No symbol) [0x00007FF68D678A83]\n\t(No symbol) [0x00007FF68D64E55E]\n\t(No symbol) [0x00007FF68D64D71C]\n\t(No symbol) [0x00007FF68D64E111]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF68DA31CDC+1102764]\n\t(No symbol) [0x00007FF68D6C25F6]\n\t(No symbol) [0x00007FF68D753DAC]\n\t(No symbol) [0x00007FF68D74BDA8]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF68DA30C25+1098485]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF68D7E9E31+281249]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF68D7E45B4+258596]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF68D7E46EF+258911]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF68D7D8EC1+211761]\n\tBaseThreadInitThunk [0x00007FFC60A77344+20]\n\tRtlUserThreadStart [0x00007FFC614E26B1+33]", "trace": "self = <Test_cases.test_login.Test_login_class object at 0x000001596A787E00>, id = 'Admin', password = 'admin'\n\n    @pytest.mark.parametrize('id,password',datadriven.get_data(r\"D:\\pytest_framework\\excelfiles\\loginpage.xlsx\",'loginPage'))\n    def test_tc1(self,id,password):\n        login_obj=login_page.Login_page(self.driver)\n        login_obj.enter_value_into_username(id)\n        login_obj.enter_value_into_password(password)\n>       login_obj.submit_button()\n\ntest_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\login_page.py:33: in submit_button\n    self.driver.find_element(By.XPATH,\"//h6[@class='oxd-text oxd-text--h6 oxd-topbar-header-breadcrumb-module']\").text\nC:\\Users\\user\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\user\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001596AA188F0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...7D8EC1+211761]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC60A77344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFC614E26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h6[@class='oxd-text oxd-text--h6 oxd-topbar-header-breadcrumb-module']\"}\nE         (Session info: MicrosoftEdge=122.0.2365.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF68D85B7F2+63538]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF68D7DF672+238306]\nE       \t(No symbol) [0x00007FF68D613407]\nE       \t(No symbol) [0x00007FF68D6597ED]\nE       \t(No symbol) [0x00007FF68D6598B0]\nE       \t(No symbol) [0x00007FF68D694387]\nE       \t(No symbol) [0x00007FF68D678E5F]\nE       \t(No symbol) [0x00007FF68D64F037]\nE       \t(No symbol) [0x00007FF68D691F49]\nE       \t(No symbol) [0x00007FF68D678A83]\nE       \t(No symbol) [0x00007FF68D64E55E]\nE       \t(No symbol) [0x00007FF68D64D71C]\nE       \t(No symbol) [0x00007FF68D64E111]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF68DA31CDC+1102764]\nE       \t(No symbol) [0x00007FF68D6C25F6]\nE       \t(No symbol) [0x00007FF68D753DAC]\nE       \t(No symbol) [0x00007FF68D74BDA8]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF68DA30C25+1098485]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF68D7E9E31+281249]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF68D7E45B4+258596]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF68D7E46EF+258911]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF68D7D8EC1+211761]\nE       \tBaseThreadInitThunk [0x00007FFC60A77344+20]\nE       \tRtlUserThreadStart [0x00007FFC614E26B1+33]\n\nC:\\Users\\user\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "parameters": [{"name": "id", "value": "'Admin'"}, {"name": "password", "value": "'admin'"}], "start": 1709989441614, "stop": 1709989445904, "uuid": "27bc6569-cca5-48f0-8827-2f0ef0292d98", "historyId": "867df0ec47108ea1aeb385ff9b8f7b85", "testCaseId": "a3ade27c33411e51aa37b3734a4dd0db", "fullName": "test_login.Test_login_class#test_tc1", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('login_cred', 'log_on_failure')"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_login_class"}, {"name": "host", "value": "DESKTOP-MS40328"}, {"name": "thread", "value": "13728-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}