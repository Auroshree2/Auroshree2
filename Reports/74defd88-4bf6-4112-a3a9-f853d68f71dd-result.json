{"name": "testJustFixWindowsConsole", "status": "failed", "statusDetails": {"message": "AssertionError: unexpectedly identical: <Mock id='2688716674528'>", "trace": "self = <pip._vendor.colorama.tests.initialise_test.JustFixWindowsConsoleTest testMethod=testJustFixWindowsConsole>\n\n    @patch(\"colorama.ansitowin32.winapi_test\", lambda: True)\n    def testJustFixWindowsConsole(self):\n        if sys.platform != \"win32\":\n            # just_fix_windows_console should be a no-op\n            just_fix_windows_console()\n            self.assertIs(sys.stdout, orig_stdout)\n            self.assertIs(sys.stderr, orig_stderr)\n        else:\n            def fake_std():\n                # Emulate stdout=not a tty, stderr=tty\n                # to check that we handle both cases correctly\n                stdout = Mock()\n                stdout.closed = False\n                stdout.isatty.return_value = False\n                stdout.fileno.return_value = 1\n                sys.stdout = stdout\n    \n                stderr = Mock()\n                stderr.closed = False\n                stderr.isatty.return_value = True\n                stderr.fileno.return_value = 2\n                sys.stderr = stderr\n    \n            for native_ansi in [False, True]:\n                with patch(\n                    'colorama.ansitowin32.enable_vt_processing',\n                    lambda *_: native_ansi\n                ):\n                    self._reset()\n                    fake_std()\n    \n                    # Regular single-call test\n                    prev_stdout = sys.stdout\n                    prev_stderr = sys.stderr\n                    just_fix_windows_console()\n                    self.assertIs(sys.stdout, prev_stdout)\n                    if native_ansi:\n                        self.assertIs(sys.stderr, prev_stderr)\n                    else:\n>                       self.assertIsNot(sys.stderr, prev_stderr)\nE                       AssertionError: unexpectedly identical: <Mock id='2688716674528'>\n\nLib\\site-packages\\pip\\_vendor\\colorama\\tests\\initialise_test.py:167: AssertionError"}, "start": 1712902530883, "stop": 1712902530883, "uuid": "bde35834-e8db-472d-a63a-8604df1b9eb4", "historyId": "baebcf4e3165c310c11507991ea88072", "testCaseId": "baebcf4e3165c310c11507991ea88072", "fullName": "Lib.site-packages.pip._vendor.colorama.tests.initialise_test.JustFixWindowsConsoleTest#testJustFixWindowsConsole", "labels": [{"name": "parentSuite", "value": "Lib.site-packages.pip._vendor.colorama.tests"}, {"name": "suite", "value": "initialise_test"}, {"name": "subSuite", "value": "JustFixWindowsConsoleTest"}, {"name": "host", "value": "DESKTOP-MS40328"}, {"name": "thread", "value": "2256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Lib.site-packages.pip._vendor.colorama.tests.initialise_test"}]}