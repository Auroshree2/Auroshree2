{"name": "test_tc1[Admin-admin]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h6[@class='oxd-text oxd-text--h6 oxd-topbar-header-breadcrumb-module']\"}\n  (Session info: chrome=123.0.6312.107); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7B5807032+63090]\n\t(No symbol) [0x00007FF7B5772C82]\n\t(No symbol) [0x00007FF7B560EC65]\n\t(No symbol) [0x00007FF7B565499D]\n\t(No symbol) [0x00007FF7B5654ADC]\n\t(No symbol) [0x00007FF7B5695B37]\n\t(No symbol) [0x00007FF7B567701F]\n\t(No symbol) [0x00007FF7B5693412]\n\t(No symbol) [0x00007FF7B5676D83]\n\t(No symbol) [0x00007FF7B56483A8]\n\t(No symbol) [0x00007FF7B5649441]\n\tGetHandleVerifier [0x00007FF7B5C025AD+4238317]\n\tGetHandleVerifier [0x00007FF7B5C3F70D+4488525]\n\tGetHandleVerifier [0x00007FF7B5C379EF+4456495]\n\tGetHandleVerifier [0x00007FF7B58E0576+953270]\n\t(No symbol) [0x00007FF7B577E54F]\n\t(No symbol) [0x00007FF7B5779224]\n\t(No symbol) [0x00007FF7B577935B]\n\t(No symbol) [0x00007FF7B5769B94]\n\tBaseThreadInitThunk [0x00007FFC5C227344+20]\n\tRtlUserThreadStart [0x00007FFC5D3E26B1+33]", "trace": "self = <Test_cases.test_login.Test_login_class object at 0x0000014EAFBD23C0>\nid = 'Admin', password = 'admin'\n\n    @pytest.mark.parametrize('id,password',datadriven.get_data(r\"D:\\pytest_framework\\excelfiles\\loginpage.xlsx\",'loginPage'))\n    def test_tc1(self,id,password):\n        login_obj=login_page.Login_page(self.driver)\n        login_obj.enter_value_into_username(id)\n        login_obj.enter_value_into_password(password)\n>       login_obj.submit_button()\n\nTest_cases\\test_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:33: in submit_button\n    self.driver.find_element(By.XPATH,\"//h6[@class='oxd-text oxd-text--h6 oxd-topbar-header-breadcrumb-module']\").text\nC:\\Users\\user\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\user\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000014EAFBC7A40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7B5769B94]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC5C227344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFC5D3E26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h6[@class='oxd-text oxd-text--h6 oxd-topbar-header-breadcrumb-module']\"}\nE         (Session info: chrome=123.0.6312.107); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7B5807032+63090]\nE       \t(No symbol) [0x00007FF7B5772C82]\nE       \t(No symbol) [0x00007FF7B560EC65]\nE       \t(No symbol) [0x00007FF7B565499D]\nE       \t(No symbol) [0x00007FF7B5654ADC]\nE       \t(No symbol) [0x00007FF7B5695B37]\nE       \t(No symbol) [0x00007FF7B567701F]\nE       \t(No symbol) [0x00007FF7B5693412]\nE       \t(No symbol) [0x00007FF7B5676D83]\nE       \t(No symbol) [0x00007FF7B56483A8]\nE       \t(No symbol) [0x00007FF7B5649441]\nE       \tGetHandleVerifier [0x00007FF7B5C025AD+4238317]\nE       \tGetHandleVerifier [0x00007FF7B5C3F70D+4488525]\nE       \tGetHandleVerifier [0x00007FF7B5C379EF+4456495]\nE       \tGetHandleVerifier [0x00007FF7B58E0576+953270]\nE       \t(No symbol) [0x00007FF7B577E54F]\nE       \t(No symbol) [0x00007FF7B5779224]\nE       \t(No symbol) [0x00007FF7B577935B]\nE       \t(No symbol) [0x00007FF7B5769B94]\nE       \tBaseThreadInitThunk [0x00007FFC5C227344+20]\nE       \tRtlUserThreadStart [0x00007FFC5D3E26B1+33]\n\nC:\\Users\\user\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "parameters": [{"name": "id", "value": "'Admin'"}, {"name": "password", "value": "'admin'"}], "start": 1712903793093, "stop": 1712903797456, "uuid": "117401f7-0333-4139-a578-e6cc6fba53a2", "historyId": "f3275e0fadf4d1856ed6fd2b754b1a72", "testCaseId": "701a41b7956854f2af881ab7281676ee", "fullName": "Test_cases.test_login.Test_login_class#test_tc1", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('login_cred', 'log_on_failure')"}, {"name": "parentSuite", "value": "Test_cases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_login_class"}, {"name": "host", "value": "DESKTOP-MS40328"}, {"name": "thread", "value": "11460-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_cases.test_login"}]}